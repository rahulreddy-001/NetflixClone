{"version":3,"sources":["axios.js","Row.js","Request.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","type","React","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","handleClick","movie","API_KEY","baseUrl","fetchYtUrl","id","ytKey","vidArr","console","log","map","e","key","className","onClick","src","poster_path","alt","name","videoId","opts","height","width","playerVars","autoplay","requests","fetchHBOOriginals","fetchTreInIndia","fetchNetflixOriginals","fetchSonyLivOriginals","fetchHotstarOriginals","fetchAhaOriginals","fetchAmazonOriginals","fetchZeeTVOriginals","fetchTrendingInMovie","fetchTrendingInTV","fetchTopRatedMovies","fetchTopRatedTVShows","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","original_nmae","string","maxLength","substring","truncateString","overview","Nav","show","handleShow","window","addEventListener","scrollY","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75ea00ee.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import React from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nconst base_Url = \"https://image.tmdb.org/t/p/original/\";\r\nfunction Row({ title, fetchUrl, isLargeRow, type }) {\r\n  const [movies, setMovies] = React.useState([]);\r\n  const [trailerUrl, setTrailerUrl] = React.useState(\"\");\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const handleClick = async (movie, type) => {\r\n    const API_KEY = \"ff02beb9190ca6bc657d187c91d3b767\";\r\n    const baseUrl = `https://api.themoviedb.org/3/${type}`;\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      var fetchYtUrl = `${baseUrl}/${movie.id}/videos?api_key=${API_KEY}`;\r\n      const ytKey = await axios.get(fetchYtUrl);\r\n      const vidArr = ytKey.data.results;\r\n      console.log(vidArr);\r\n      vidArr.map((e) => {\r\n        if (e.type === \"Trailer\") setTrailerUrl(e.key);\r\n      });\r\n    }\r\n  };\r\n  {\r\n    console.log(movies);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <h2>{title}</h2>\r\n      </div>\r\n      <div className=\"row_posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n            onClick={() => handleClick(movie, type)}\r\n            src={`${base_Url}${\r\n              isLargeRow ? movie.poster_path : movie.poster_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY = \"ff02beb9190ca6bc657d187c91d3b767\";\r\n\r\nconst requests = {\r\n  fetchHBOOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=3186`,\r\n  fetchTreInIndia: `discover/movie?api_key=${API_KEY}&language=te|en-US&region=IN&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&watch_region=IN&with_watch_monetization_types=flatrate`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchSonyLivOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=2646`,\r\n  fetchHotstarOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=3919`,\r\n  fetchAhaOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=3758`,\r\n  fetchAmazonOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=1024`,\r\n  fetchZeeTVOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=526`,\r\n  fetchTrendingInMovie: `/trending/movie/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchTrendingInTV: `/trending/tv/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchTopRatedMovies: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchTopRatedTVShows: `/tv/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import React from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./Request\";\r\nimport \"./Banner.css\";\r\nfunction Banner() {\r\n  const [movie, setMovie] = React.useState([]);\r\n  React.useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchTreInIndia);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  const truncateString = (string = \"\", maxLength = 50) =>\r\n    string.length > maxLength ? `${string.substring(0, maxLength)}…` : string;\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner_contents\">\r\n        <h1 className=\"banner_title\">\r\n          {movie?.title || movie?.name || movie?.original_nmae}\r\n        </h1>\r\n        <div className=\"banner_buttons\">\r\n          <button className=\"banner_button\">Play</button>\r\n          <button className=\"banner_button\">My List</button>\r\n        </div>\r\n        <h1 className=\"banner_description\">\r\n          {truncateString(movie?.overview, 150)}\r\n        </h1>\r\n      </div>\r\n      <div className=\"banner--fadebottom\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\nimport \"./nav.css\";\r\n\r\nfunction Nav() {\r\n  const [show, handleShow] = React.useState(false);\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) handleShow(true);\r\n      else handleShow(false);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className={`nav && ${show && \"nav_black\"}`}>\r\n      <img\r\n        className=\"nav_logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1198px-Netflix_2015_logo.svg.png\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n      <img\r\n        className=\"nav_avatar\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n        alt=\"Netflix Avatar\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Row from \"./Row\";\nimport requests from \"./Request\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"Trending in India\"\n        fetchUrl={requests.fetchTreInIndia}\n        isLargeRow={true}\n        type=\"movie\"\n      />\n      <Row\n        title=\"Netflix Originals\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow={true}\n        type=\"tv\"\n      />\n      <Row\n        title=\"HBO Max Originals\"\n        fetchUrl={requests.fetchHBOOriginals}\n        isLargeRow={true}\n        type=\"movie\"\n      />\n      <Row\n        title=\"Amazon Originals\"\n        fetchUrl={requests.fetchAmazonOriginals}\n        isLargeRow={true}\n        type=\"tv\"\n      />\n      <Row\n        title=\"Disney+ Hotstar\"\n        fetchUrl={requests.fetchHotstarOriginals}\n        isLargeRow={true}\n        type=\"tv\"\n      />\n      <Row\n        title=\"Aha\"\n        fetchUrl={requests.fetchAhaOriginals}\n        isLargeRow={true}\n        type=\"tv\"\n      />\n      <Row\n        title=\"Sony Liv Originals\"\n        fetchUrl={requests.fetchSonyLivOriginals}\n        isLargeRow={true}\n        type=\"tv\"\n      />\n      <Row\n        title=\"Zee TV Originals\"\n        fetchUrl={requests.fetchZeeTVOriginals}\n        isLargeRow={true}\n        type=\"tv\"\n      />\n\n      <Row\n        title=\"Trending in Movies\"\n        fetchUrl={requests.fetchTrendingInMovie}\n        type=\"movie\"\n      />\n      <Row\n        title=\"Trending in TV\"\n        fetchUrl={requests.fetchTrendingInTV}\n        type=\"tv\"\n      />\n      <Row\n        title=\"Top Rated Movies\"\n        fetchUrl={requests.fetchTopRatedMovies}\n        type=\"movie\"\n      />\n      <Row\n        title=\"Top Rated TV Shows\"\n        fetchUrl={requests.fetchTopRatedTVShows}\n        type=\"tv\"\n      />\n      <Row\n        title=\"Action Movies\"\n        fetchUrl={requests.fetchActionMovies}\n        type=\"movie\"\n      />\n      <Row\n        title=\"Comedy Movies\"\n        fetchUrl={requests.fetchComedyMovies}\n        type=\"movie\"\n      />\n      <Row\n        title=\"Horror Movies\"\n        fetchUrl={requests.fetchHorrorMovies}\n        type=\"movie\"\n      />\n      <Row\n        title=\"Romance Movies\"\n        fetchUrl={requests.fetchRomanceMovies}\n        type=\"movie\"\n      />\n      <Row\n        title=\"Documentaries\"\n        fetchUrl={requests.fetchDocumentaries}\n        type=\"movie\"\n      />\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n   <React.StrictMode>\n    <App />\n   </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n\n// ,document.getElementById('root')\n\n\n"],"sourceRoot":""}